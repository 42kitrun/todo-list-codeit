/* src/app/[itemId]/page.module.css */

.container {
  background-color: var(--background);
  width: 100%;
  max-width: none;
  margin: 0;
  padding: 0;
}

/* ------------------------------------------------------------- */
/* .mainContent (Mobile First) */
/* ------------------------------------------------------------- */
.mainContent {
  padding: 24px 20px;
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column; /* 기본은 세로 정렬 */
  align-items: center;
  gap: 24px;
}

/* 로딩 및 에러 메시지 스타일 */
.loadingErrorState {
  text-align: center;
  padding: 50px;
  font-size: 1.2em;
  color: var(--text-secondary);
}

.detailContainer {
  width: 100%;
  /* height: 100%; // ⭐ 이 'height: 100%'는 상황에 따라 문제가 될 수 있습니다. 만약 부모의 높이가 명확하지 않다면, 자식 요소들이 높이를 결정하도록 'auto'로 두거나 제거하는 것을 고려해 보세요. ⭐ */
  display: flex;
  flex-direction: column; /* 기본은 세로 정렬 */
  align-items: center;
  gap: 24px;
}

/* ============================================================= */
/* 이미지 섹션 스타일 */
/* ============================================================= */
.imageInputContainer {
  position: relative;
  width: 100%; /* 모바일: 전체 너비 */
  max-width: 996px;
  height: 311px;
  border-radius: 24px;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
  background-color: var(--slate-100);
}

.imagePlaceholder {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: 2px dashed var(--slate-300);
  cursor: pointer;
  position: relative;
}

.imageAddButton {
  position: absolute;
  bottom: 24px;
  right: 24px;
  z-index: 10;
}

.uploadedImage {
  width: 100%;
  height: 100%;
  object-fit: cover; /* ⭐ 'fill'에서 'cover'로 변경했습니다. 이미지의 비율을 유지하면서 영역을 채웁니다. ⭐ */
  border-radius: 12px;
  display: block;
}

.imageButtons {
  position: absolute;
  bottom: 24px;
  right: 24px;
  display: flex;
  gap: 8px;
  z-index: 10;
}

.moveContainer {
  /* .detailContainer의 두 번째 직계 자식 */
  width: 100%; /* 모바일: 전체 너비 */
  height: 100%; /* 마찬가지로 필요하지 않으면 'auto'로 두거나 제거 고려 */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 24px;
}

/* ============================================================= */
/* Memo Section 스타일 */
/* ============================================================= */
.memoContainer {
  /* .moveContainer의 자식 */
  position: relative;
  width: 100%;
  max-width: 996px;
  height: 311px;
  border-radius: 24px;
  overflow: hidden;
  margin-top: 24px; /* 모바일/태블릿 전용 마진 */
  padding: 0;

  background-image: url("/img/memo.svg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.memoTitle {
  position: relative;
  z-index: 1;
  height: 60px;
  display: flex;
  justify-content: center;
  align-items: center;

  font-family: var(--font-nanum-square-extra-bold), sans-serif;
  font-weight: 800;
  font-size: 20px;
  color: var(--amber-800);
}

.memoTextarea {
  position: relative;
  z-index: 1;
  margin: 16px 20px 20px 20px;
  width: auto;
  flex-grow: 1;
  padding: 12px;
  border: none;
  background-color: transparent;
  outline: none;
  resize: none;
  font-family: var(--font-nanum-square-regular), sans-serif;
  font-weight: 400;
  font-size: 14px;
  line-height: 140%;
  color: var(--slate-900);
}

/* ============================================================= */
/* Button Group */
/* ============================================================= */
.buttonGroup {
  display: flex;
  gap: 16px;
  width: 100%;
  max-width: 996px;
  justify-content: center;
}

/* ============================================================= */
/* 반응형 디자인 */
/* ============================================================= */
/* 태블릿 (min-width 부터 시작) */
@media (min-width: var(--tablet-min-width)) {
  .mainContent {
    padding: 32px 32px;
    gap: 32px;
  }

  .memoContainer {
    margin-top: 32px;
  }
}

/* 데스크톱 (min-width 부터 시작) */
@media (min-width: var(--desktop-min-width)) {
  .mainContent {
    padding: 32px 20px;
    gap: 20px; /* 이미지 컨테이너와 메모 컨테이너 사이 간격 */
    flex-direction: row; /* ⭐ mainContent도 가로 정렬 ⭐ */
    align-items: flex-start; /* 상단 정렬 */
    justify-content: center; /* 가운데 정렬 */
  }

  .detailContainer {
    flex-direction: row; /* ⭐ 여기도 flex-direction: row 적용 ⭐ */
    align-items: flex-start; /* 자식 요소들을 상단에 정렬 */
    width: 100%; /* mainContent의 전체 너비를 차지하도록 */
    gap: 20px; /* imageInputContainer와 moveContainer 사이의 간격 */
  }

  /* ⭐ 가장 중요한 수정: .detailContainer의 직계 자식인 .imageInputContainer와 .moveContainer의 너비를 설정 ⭐ */
  .imageInputContainer,
  .moveContainer {
    /* <-- .memoContainer 대신 .moveContainer를 선택자로 사용 */
    width: calc(50% - 10px); /* 50% - (.detailContainer의 gap의 절반) */
    max-width: unset; /* 더 이상 최대 너비 제한이 필요 없음 */
    margin-top: 0; /* 가로 정렬 시 세로 마진 제거 */
  }

  .memoContainer {
    /* .memoContainer는 이제 .moveContainer의 자식입니다. */
    /* .moveContainer가 Flex 컨테이너이고 column 방향이므로, .memoContainer는 100% 너비를 유지할 수 있습니다. */
    height: 311px; /* 이미지 컨테이너와 높이를 맞춥니다. */
    margin-top: 0; /* 데스크톱에서는 이전에 적용된 마진 제거 */
  }

  /* 데스크톱에서 Memo 텍스트 영역 높이 조정 (필요시) */
  .memoTextarea {
    height: calc(
      100% - 60px - 36px
    ); /* 전체 높이 - memoTitle 높이 - 위아래 margin */
    box-sizing: border-box; /* padding이 높이에 포함되도록 */
  }

  .buttonGroup {
    width: 100%; /* 부모 너비를 따라가게 */
    max-width: 1200px; /* 전체 컨텐츠 최대 너비에 맞춤. 만약 .moveContainer가 좁다면 이 값은 .moveContainer의 너비에 맞춰 조정될 수 있습니다. */
    margin-top: 40px; /* 이미지/메모 섹션 아래에 여백 추가 */
    justify-content: flex-end; /* 오른쪽 정렬 */
  }
}
