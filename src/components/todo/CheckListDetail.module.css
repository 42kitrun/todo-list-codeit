/* src/components/todo/CheckListDetail.module.css */

/*
  CheckListDetail 컴포넌트의 스타일을 정의하는 CSS 모듈입니다.
  이 파일은 개별 체크리스트 항목의 레이아웃, 디자인, 상태 변화를 처리합니다.
  주요 기능:
  - 체크리스트 항목의 기본 레이아웃 (수직 정렬, 패딩, 테두리, 그림자)
  - 완료 상태(done)에 따른 배경색 변화
  - 호버(hover) 시 시각적 피드백
  - 체크박스와 제목 입력 필드의 스타일 및 배치
*/

/* --- 체크리스트 항목 전체 컨테이너 --- */
/*
  .checklistItem: 개별 체크리스트 항목의 컨테이너입니다.
  flexbox를 사용하여 자식 요소들을 세로로 정렬하고 중앙에 배치합니다.
  패딩, 둥근 모서리, 배경색, 테두리, 그림자 등 기본 디자인을 정의합니다.
  `transition`을 통해 배경색, 테두리, 그림자 변화에 부드러운 애니메이션 효과를 적용합니다.
*/
.checklistItem {
  display: flex;
  flex-direction: column; /* 항목 내용을 세로(수직)로 정렬 */
  align-items: flex-start; /* 자식 요소들을 컨테이너의 시작점(왼쪽)으로 정렬 */
  gap: 12px; /* 섹션(topSection, description 등) 간의 수직 간격 */
  padding: 16px 20px; /* 아이템 내부의 상하좌우 패딩 */
  border-radius: 24px; /* 둥근 모서리 */
  background-color: var(--white); /* 기본 배경색: 흰색 */
  border: 2px solid var(--slate-900); /* 기본 테두리: slate/900 */
  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out,
    box-shadow 0.2s ease-in-out; /* 부드러운 전환 효과 */
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* 항목에 그림자 효과 적용 */
  width: 100%; /* 부모 요소의 너비에 맞춤 */
  max-width: 996px; /* 항목의 최대 너비 제한 */
  box-sizing: border-box; /* 패딩과 보더를 포함하여 너비 계산 */
}

/* --- 완료 상태(.done) 스타일 --- */
/*
  .checklistItem.done: 체크리스트 항목이 완료되었을 때 적용되는 스타일입니다.
  `background-color`를 변경하여 완료 상태를 시각적으로 나타냅니다.
*/
.checklistItem.done {
  background-color: var(--violet-100); /* 완료 시 배경색: violet/100 */
}

/* --- 호버(hover) 상태 스타일 --- */
/*
  .checklistItem:hover: 체크리스트 항목에 마우스를 올렸을 때 적용되는 스타일입니다.
  `background-color`를 변경하여 사용자에게 인터랙션 피드백을 제공합니다.
*/
.checklistItem:hover {
  background-color: var(--slate-100); /* 호버 시 배경색: slate/100 */
}

/* --- 완료 상태(.done)의 호버 스타일 --- */
/*
  .checklistItem.done:hover: 완료된 체크리스트 항목에 마우스를 올렸을 때 적용되는 스타일입니다.
  일반 호버와 다른 배경색을 사용하여 완료 상태에서의 호버를 구분합니다.
*/
.checklistItem.done:hover {
  background-color: #e6e3fb; /* 완료 상태에서 호버 시 배경색 (violet/100보다 살짝 어둡게) */
}

/* --- 상단 섹션 (.topSection) --- */
/*
  .topSection: 체크박스와 제목 입력 필드를 포함하는 상단 영역입니다.
  flexbox를 사용하여 자식 요소들을 수평으로 정렬하고 간격을 둡니다.
*/
.topSection {
  display: flex;
  align-items: center; /* 자식 요소들을 수직 가운데로 정렬 */
  gap: 12px; /* 체크박스와 입력 필드 사이의 수평 간격 */
  width: 100%; /* 부모(.checklistItem)의 너비를 모두 사용 */
}

/* --- 체크박스 (.checkbox) --- */
/*
  .checkbox: 체크 아이콘을 감싸는 버튼 또는 컨테이너입니다.
  `flex-shrink: 0`을 통해 공간이 부족해도 크기가 줄어들지 않도록 합니다.
  고정된 너비와 높이를 가지며, 버튼의 기본 스타일을 제거하고 아이콘을 중앙에 배치합니다.
*/
.checkbox {
  flex-shrink: 0; /* 공간이 부족해도 체크박스 크기가 줄어들지 않도록 */
  width: 32px; /* 체크박스 영역의 너비 */
  height: 32px; /* 체크박스 영역의 높이 */
  padding: 0; /* 내부 패딩 제거 */
  border: none; /* 테두리 제거 */
  background: none; /* 배경 제거 */
  cursor: pointer; /* 마우스 오버 시 커서 변경 */
  display: flex; /* 내부 아이콘 중앙 정렬을 위해 flexbox 사용 */
  align-items: center; /* 수직 가운데 정렬 */
  justify-content: center; /* 수평 가운데 정렬 */
}

/* --- 체크박스 아이콘 --- */
/*
  .checkboxIcon: 체크박스 내부에 있는 실제 아이콘(`Image` 컴포넌트)에 적용됩니다.
  블록 레벨 요소로 설정하여 독립적인 공간을 가지도록 합니다.
*/
.checkboxIcon {
  display: block;
}

/* --- 제목 입력 필드 (.titleInput) --- */
/*
  .titleInput: 체크리스트 항목의 제목을 입력하는 `<input>` 필드입니다.
  `flex-grow: 1`을 통해 남은 수평 공간을 모두 차지하도록 합니다.
  폰트, 크기, 색상 등 텍스트 스타일을 정의하고, 기본 입력 필드 스타일(테두리, 배경, 외곽선)을 제거합니다.
*/
.titleInput {
  flex-grow: 1; /* 남은 수평 공간을 모두 차지하도록 확장 */
  font-family: var(--font-nanum-square-bold), sans-serif; /* 폰트 적용 */
  font-weight: 700; /* 폰트 굵기 */
  font-size: 20px; /* 폰트 크기 */
  line-height: 100%;
  color: var(--slate-900); /* 텍스트 색상 */
  border: none; /* 기본 테두리 제거 */
  background: transparent; /* 배경 투명하게 설정 */
  outline: none; /* 포커스 시 나타나는 외곽선 제거 */
  padding: 0; /* 기본 패딩 제거 */
}
